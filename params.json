{"name":"Emojie","tagline":"Image fallback for emoji","body":"JavaScript library which aims to provide fallbacks for Emoji glyphs as images.\r\n\r\nEmoji sets:\r\n\r\n* [emojie-iphone](https://github.com/lautis/emojie-iphone) - image replacements using Apple color emoji\r\n\r\n## Usage\r\n\r\n```javascript\r\n// Define mappings to images\r\nemojie.register(\"\\ud83d\\ude04\", options);\r\nemojie(document.body);\r\n```\r\n\r\nOptions is set individually for each emoji. All options will be transfered as attributes to the img element, so you might want to at least set the src attribute.\r\n\r\nAn example to clarify:\r\n\r\n```javascript\r\nemojie.register(\"\\ud83d\\ude04\", { src: \"emoji/smile.png\", class: \"smile\", title: \"smile!\", id: \"example-smiley\" });\r\nemojie(document.body);\r\n// <img src=\"emoji/smile.png\" id=\"example-smiley\" class=\"emojie emojie-smile\" title=\"smile!\">\r\n```\r\n\r\nThere is only one exception: you can set the elementName and content options to wrap the emoji inside an element of the given type and set it's content to the content option. This is useful if one want's to use images in Chrome and real emojis in Safari wrapped in a span element perhaps.\r\n\r\nTo ignore elements from emojification, set `data-no-emoji` attribute. For example,\r\n\r\n\r\n```html\r\n<div>\r\n  <p>This will get emojified.</p>\r\n  <p data-no-emojie>But this won't.</p>\r\n</div>\r\n```\r\n","google":"UA-22651783-3","note":"Don't delete this file! It's used internally to help with page regeneration."}